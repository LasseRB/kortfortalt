{"version":3,"sources":["map.js"],"names":["islands","key","assets","push","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","map","i","length","island","type","x","getRandomInt","y","xx","yy","heigth","img","Image","imgsrc","src","naturalWidth","naturalHeight","square","drawSquare","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","console","log","mouseX","mouseY","isMouseDown","max","Math","floor","random","beginMove","e","keyCode","forEach","element","offsetX","offsetY","endMove","seaBG","fillStyle","fillRect","draw","drawIsland","drawImage","addEventListener","setInterval"],"mappings":"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","file":"map.7d98b32f.js","sourceRoot":"..","sourcesContent":["import volcano from \"./img/islands/volcano.png\";\nimport assets from \"./img/islands/*.png\";\n// import path from 'path'\n// import fs from 'fs'\n// const fs = require(\"fs\")\n\n// //joining path of directory \n// const directoryPath = path.join(__dirname, '/img/islands');\n// //passsing directoryPath and callback function\n\nlet islands = [];\nfor(var key in assets){\n    islands.push(assets[key]);}\n\nconst canvas = document.getElementById('map');\nconst ctx = canvas.getContext('2d');\ncanvas.width = window.innerWidth;\ncanvas.height = 800;\n\n\n\nlet map =[];\nfor(let i = 0; i < islands.length; i++){\n    let island ={\n        type:\"island\",\n        x:getRandomInt(canvas.width) * i  % (3 * canvas.width),\n        y:getRandomInt(canvas.height) * i % (3 * canvas.height),\n        xx:null,\n        yy:null,\n        width:null,\n        heigth:null,\n        img: new Image(),\n        imgsrc: islands[i]\n        }\n        //! set fields that can be set in the object\n    island.img.src = island.imgsrc;\n    island.width = island.img.naturalWidth;\n    island.height = island.img.naturalHeight;\n map.push(island);\n}\n\nlet square ={\n    type:\"square\",\n        x:0,\n        y:0,\n        xx:null,\n        yy:null,\n        width:100,\n        heigth:100\n}\nmap.push(square);\nfunction drawSquare(){\n    // ctx.clearRect(0,canvas.width, 0, canvas.height)\n    ctx.strokeStyle = 'rgba(10, 100, 190, 0.05)';\n    ctx.lineWidth = 1;\n    ctx.beginPath(); \n    for(let i = square.y+0.5; i <= canvas.height; i += 60){\n         \n        ctx.moveTo(0,i);\n        ctx.lineTo(canvas.width,i);\n        ctx.stroke();\n    }\n    for(let i = square.x; i <= 2*canvas.width; i += 60){\n   \n        ctx.moveTo(i*0.7,0);\n        ctx.lineTo(i,canvas.width);\n        ctx.stroke();\n        \n    }\n\n    \n}\n\nconsole.log(square.x)\n\n\nlet isMouseDown = false;\nlet mouseX;\nlet mouseY;\n\n// let island = {x: 0, y: 0}; \nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\ncanvas.addEventListener(\"mousedown\", beginMove);\ncanvas.addEventListener(\"mouseup\", endMove);\ndocument.addEventListener(\"keydown\", beginMove);\ndocument.addEventListener(\"keyup\", endMove);\nfunction beginMove(e){\n    console.log(e.keyCode);\n    if(e.keyCode  === 32 || e.type == \"mousedown\"){\n        isMouseDown = true;\n        map.forEach(element =>{\n            let offsetX = mouseX-element.x;\n            let offsetY = mouseY-element.y;\n\n            element.xx = offsetX;\n            element.yy = offsetY;\n\n        })\n    }\n}\nfunction endMove(e){\n    isMouseDown = false;              \n}\ncanvas.addEventListener(\"mouseout\", e=>{\n    isMouseDown = false;              \n});\n\n\ncanvas.addEventListener(\"mousemove\", e=>{  \n    \n     mouseX = e.offsetX;\n     mouseY = e.offsetY;\n\n    if(isMouseDown){\n        draw();\n        map.forEach(element=> {\n            // console.debug(element.el.xx +\" \"+ element.el.yy)\n           \n            element.x = (element.xx-mouseX)*-1;\n            element.y = (element.yy-mouseY)*-1;\n        })\n    }\n});\nfunction seaBG(){\n    ctx.fillStyle = \"rgb(30, 181, 200)\"; \n    ctx.fillRect(0,0,canvas.width,1500);\n}\n\nfunction draw(){\n    //ctx.\n    // ctx.fillRect(0,0,canvas.width-100,1000)\n    seaBG();\n    drawSquare();\n    drawIsland();\n      \n}\n\nfunction drawIsland(){\n\n map.forEach(island =>{ \n     if(island.type === \"island\"){\n          \n            ctx.drawImage(island.img,island.x, island.y);\n} });\n}\nsetInterval(function(){ \n    draw();\n}, 1);\n"]}